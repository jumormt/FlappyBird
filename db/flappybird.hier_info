|flappybird
pause => clk_3:u2.pause
sw7 => mode_select:u7.sw7
sw6 => mode_select:u7.sw6
sw1 => mode_select:u7.sw1
sw0 => mode_select:u7.sw0
reset => cleanbtn:u10.reset
clk => div_clk:u0.clk
clk => random:u9.clk
btn_up => cleanbtn:u10.btn_up
btn_down => cleanbtn:u10.btn_down
btn_left => cleanbtn:u10.btn_left
btn_right => cleanbtn:u10.btn_right
btn_up2 => cleanbtn:u10.btn_up2
btn_down2 => cleanbtn:u10.btn_down2
G[0] <= pipe_move:u3.G[0]
G[1] <= pipe_move:u3.G[1]
G[2] <= pipe_move:u3.G[2]
G[3] <= pipe_move:u3.G[3]
G[4] <= pipe_move:u3.G[4]
G[5] <= pipe_move:u3.G[5]
G[6] <= pipe_move:u3.G[6]
G[7] <= pipe_move:u3.G[7]
R[0] <= pipe_move:u3.R[0]
R[1] <= pipe_move:u3.R[1]
R[2] <= pipe_move:u3.R[2]
R[3] <= pipe_move:u3.R[3]
R[4] <= pipe_move:u3.R[4]
R[5] <= pipe_move:u3.R[5]
R[6] <= pipe_move:u3.R[6]
R[7] <= pipe_move:u3.R[7]
C[0] <= pipe_move:u3.C[0]
C[1] <= pipe_move:u3.C[1]
C[2] <= pipe_move:u3.C[2]
C[3] <= pipe_move:u3.C[3]
C[4] <= pipe_move:u3.C[4]
C[5] <= pipe_move:u3.C[5]
C[6] <= pipe_move:u3.C[6]
C[7] <= pipe_move:u3.C[7]
score_view[0] <= seg7_1:u6.score_view[0]
score_view[1] <= seg7_1:u6.score_view[1]
score_view[2] <= seg7_1:u6.score_view[2]
score_view[3] <= seg7_1:u6.score_view[3]
score_view[4] <= seg7_1:u6.score_view[4]
score_view[5] <= seg7_1:u6.score_view[5]
score_view[6] <= seg7_1:u6.score_view[6]
cat[0] <= seg7_1:u6.cat[0]
cat[1] <= seg7_1:u6.cat[1]
cat[2] <= seg7_1:u6.cat[2]
cat[3] <= seg7_1:u6.cat[3]
cat[4] <= seg7_1:u6.cat[4]
cat[5] <= seg7_1:u6.cat[5]
cat[6] <= seg7_1:u6.cat[6]
cat[7] <= seg7_1:u6.cat[7]


|flappybird|div_clk:u0
clk => clk_1_sig.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk_out <= clk_1_sig.DB_MAX_OUTPUT_PORT_TYPE


|flappybird|div_clk3:u1
speed_mode[0] => Mux0.IN5
speed_mode[0] => Mux1.IN5
speed_mode[0] => Mux2.IN5
speed_mode[0] => Mux3.IN5
speed_mode[0] => Mux4.IN5
speed_mode[0] => Mux5.IN5
speed_mode[0] => Mux6.IN5
speed_mode[0] => Mux7.IN5
speed_mode[0] => Mux8.IN5
speed_mode[0] => Mux9.IN4
speed_mode[1] => Mux0.IN4
speed_mode[1] => Mux1.IN4
speed_mode[1] => Mux2.IN4
speed_mode[1] => Mux3.IN4
speed_mode[1] => Mux4.IN4
speed_mode[1] => Mux5.IN4
speed_mode[1] => Mux6.IN4
speed_mode[1] => Mux7.IN4
speed_mode[1] => Mux8.IN4
speed_mode[1] => Mux9.IN3
clk => clk_3_sig.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk_3 <= clk_3_sig.DB_MAX_OUTPUT_PORT_TYPE


|flappybird|clk_3:u2
pause => flag_1_sig.OUTPUTSELECT
pause => flag_1_sig.OUTPUTSELECT
pause => flag_1_sig.OUTPUTSELECT
pause => flag_1_sig.OUTPUTSELECT
pause => flag_1_sig.OUTPUTSELECT
reset => flag_1.OUTPUTSELECT
reset => flag_1.OUTPUTSELECT
reset => flag_1.OUTPUTSELECT
reset => flag_1.OUTPUTSELECT
reset => flag_1.OUTPUTSELECT
reset => flag_1_sig[0].ACLR
reset => flag_1_sig[1].ACLR
reset => flag_1_sig[2].ACLR
reset => flag_1_sig[3].ACLR
reset => flag_1_sig[4].ACLR
clk_3 => flag_1_sig[0].CLK
clk_3 => flag_1_sig[1].CLK
clk_3 => flag_1_sig[2].CLK
clk_3 => flag_1_sig[3].CLK
clk_3 => flag_1_sig[4].CLK
game_over_clk3[0] => Equal0.IN1
game_over_clk3[1] => Equal0.IN0
game_over_clk32[0] => Equal1.IN1
game_over_clk32[1] => Equal1.IN0
flag_1[0] <= flag_1.DB_MAX_OUTPUT_PORT_TYPE
flag_1[1] <= flag_1.DB_MAX_OUTPUT_PORT_TYPE
flag_1[2] <= flag_1.DB_MAX_OUTPUT_PORT_TYPE
flag_1[3] <= flag_1.DB_MAX_OUTPUT_PORT_TYPE
flag_1[4] <= flag_1.DB_MAX_OUTPUT_PORT_TYPE


|flappybird|pipe_move:u3
random_out[0] => Mux0.IN19
random_out[0] => Mux1.IN19
random_out[0] => Mux2.IN19
random_out[1] => Mux0.IN18
random_out[1] => Mux1.IN18
random_out[1] => Mux2.IN18
random_out[2] => Mux0.IN17
random_out[2] => Mux1.IN17
random_out[2] => Mux2.IN17
random_out[3] => Mux0.IN16
random_out[3] => Mux1.IN16
random_out[3] => Mux2.IN16
random_out[4] => ~NO_FANOUT~
member => game_over_sig.OUTPUTSELECT
member => game_over_sig.OUTPUTSELECT
member => count_s1.OUTPUTSELECT
member => count_s1.OUTPUTSELECT
member => count_s1.OUTPUTSELECT
member => count_s1.OUTPUTSELECT
member => count_s1.OUTPUTSELECT
member => score_sig.OUTPUTSELECT
member => score_sig.OUTPUTSELECT
member => score_sig.OUTPUTSELECT
member => score_sig.OUTPUTSELECT
member => flag_past.OUTPUTSELECT
member => flag_past.OUTPUTSELECT
member => flag_past.OUTPUTSELECT
member => flag_past.OUTPUTSELECT
member => flag_past.OUTPUTSELECT
member => game_over_clk3.OUTPUTSELECT
member => game_over_clk3.OUTPUTSELECT
member => score.OUTPUTSELECT
member => score.OUTPUTSELECT
member => score.OUTPUTSELECT
member => score.OUTPUTSELECT
member => G_sig.OUTPUTSELECT
member => G_sig.OUTPUTSELECT
member => G_sig.OUTPUTSELECT
member => G_sig.OUTPUTSELECT
member => G_sig.OUTPUTSELECT
member => G_sig.OUTPUTSELECT
member => G_sig.OUTPUTSELECT
member => G_sig.OUTPUTSELECT
member => R_sig.OUTPUTSELECT
member => R_sig.OUTPUTSELECT
member => R_sig.OUTPUTSELECT
member => R_sig.OUTPUTSELECT
member => R_sig.OUTPUTSELECT
member => R_sig.OUTPUTSELECT
member => R_sig.OUTPUTSELECT
member => R_sig.OUTPUTSELECT
member => R.OUTPUTSELECT
member => R.OUTPUTSELECT
member => R.OUTPUTSELECT
member => R.OUTPUTSELECT
member => R.OUTPUTSELECT
member => R.OUTPUTSELECT
member => R.OUTPUTSELECT
member => R.OUTPUTSELECT
member => position_px_sig.OUTPUTSELECT
member => position_px_sig.OUTPUTSELECT
member => position_px_sig.OUTPUTSELECT
member => position_nx_sig.OUTPUTSELECT
member => position_nx_sig.OUTPUTSELECT
member => position_nx_sig.OUTPUTSELECT
member => game_over_sig.OUTPUTSELECT
member => game_over_sig.OUTPUTSELECT
member => score_sig.OUTPUTSELECT
member => score_sig.OUTPUTSELECT
member => score_sig.OUTPUTSELECT
member => score_sig.OUTPUTSELECT
member => game_over_sig2[1].ENA
member => game_over_sig2[0].ENA
member => score_sig2[3].ENA
member => score_sig2[2].ENA
member => score_sig2[1].ENA
member => score_sig2[0].ENA
member => game_over_clk32[1]~reg0.ENA
member => game_over_clk32[0]~reg0.ENA
member => score2[3]~reg0.ENA
member => score2[2]~reg0.ENA
member => score2[1]~reg0.ENA
member => score2[0]~reg0.ENA
more => position_px_sig.OUTPUTSELECT
more => position_px_sig.OUTPUTSELECT
more => position_px_sig.OUTPUTSELECT
more => position_nx_sig.OUTPUTSELECT
more => position_nx_sig.OUTPUTSELECT
more => position_nx_sig.OUTPUTSELECT
reset => count_r[0].ACLR
reset => count_r[1].ACLR
reset => count_r[2].ACLR
reset => count_r[3].ACLR
reset => count_r[4].ACLR
reset => score[0]~reg0.ALOAD
reset => score[1]~reg0.ALOAD
reset => score[2]~reg0.ALOAD
reset => score[3]~reg0.ALOAD
reset => score2[0]~reg0.ALOAD
reset => score2[1]~reg0.ALOAD
reset => score2[2]~reg0.ALOAD
reset => score2[3]~reg0.ALOAD
reset => game_over_clk32[0]~reg0.ALOAD
reset => game_over_clk32[1]~reg0.ALOAD
reset => game_over_clk3[0]~reg0.ALOAD
reset => game_over_clk3[1]~reg0.ALOAD
reset => flag_past[0].ACLR
reset => flag_past[1].ACLR
reset => flag_past[2].ACLR
reset => flag_past[3].ACLR
reset => flag_past[4].ACLR
reset => count_p[0].PRESET
reset => count_p[1].PRESET
reset => count_p[2].PRESET
reset => count_p[3].PRESET
reset => score_sig2[0].ACLR
reset => score_sig2[1].ACLR
reset => score_sig2[2].ACLR
reset => score_sig2[3].ACLR
reset => score_sig[0].ACLR
reset => score_sig[1].ACLR
reset => score_sig[2].ACLR
reset => score_sig[3].ACLR
reset => count_s1[0].ACLR
reset => count_s1[1].ACLR
reset => count_s1[2].ACLR
reset => count_s1[3].ACLR
reset => count_s1[4].ACLR
reset => game_over_sig2[0].ACLR
reset => game_over_sig2[1].ACLR
reset => game_over_sig[0].ACLR
reset => game_over_sig[1].ACLR
reset => count[0].PRESET
reset => count[1].PRESET
reset => count[2].PRESET
reset => count[3].PRESET
reset => C[0]~reg0.PRESET
reset => C[1]~reg0.PRESET
reset => C[2]~reg0.PRESET
reset => C[3]~reg0.PRESET
reset => C[4]~reg0.PRESET
reset => C[5]~reg0.PRESET
reset => C[6]~reg0.PRESET
reset => C[7]~reg0.PRESET
reset => R[0]~reg0.ENA
reset => random[16][2].ENA
reset => random[16][1].ENA
reset => random[16][0].ENA
reset => random[15][2].ENA
reset => random[15][1].ENA
reset => random[15][0].ENA
reset => random[14][2].ENA
reset => random[14][1].ENA
reset => random[14][0].ENA
reset => random[13][2].ENA
reset => random[13][1].ENA
reset => random[13][0].ENA
reset => random[12][2].ENA
reset => random[12][1].ENA
reset => random[12][0].ENA
reset => random[11][2].ENA
reset => random[11][1].ENA
reset => random[11][0].ENA
reset => random[10][2].ENA
reset => random[10][1].ENA
reset => random[10][0].ENA
reset => random[9][2].ENA
reset => random[9][1].ENA
reset => random[9][0].ENA
reset => random[8][2].ENA
reset => random[8][1].ENA
reset => random[8][0].ENA
reset => random[7][2].ENA
reset => random[7][1].ENA
reset => random[7][0].ENA
reset => random[6][2].ENA
reset => random[6][1].ENA
reset => random[6][0].ENA
reset => random[5][2].ENA
reset => random[5][1].ENA
reset => random[5][0].ENA
reset => random[4][2].ENA
reset => random[4][1].ENA
reset => random[4][0].ENA
reset => random[3][2].ENA
reset => random[3][1].ENA
reset => random[3][0].ENA
reset => random[2][2].ENA
reset => random[2][1].ENA
reset => random[2][0].ENA
reset => random[1][2].ENA
reset => random[1][1].ENA
reset => random[1][0].ENA
reset => random[0][2].ENA
reset => random[0][1].ENA
reset => random[0][0].ENA
reset => C_sig[7].ENA
reset => C_sig[6].ENA
reset => C_sig[5].ENA
reset => C_sig[4].ENA
reset => C_sig[3].ENA
reset => C_sig[2].ENA
reset => C_sig[1].ENA
reset => C_sig[0].ENA
reset => G_sig[7].ENA
reset => G_sig[6].ENA
reset => G_sig[5].ENA
reset => G_sig[4].ENA
reset => G_sig[3].ENA
reset => G_sig[2].ENA
reset => G_sig[1].ENA
reset => G_sig[0].ENA
reset => G[7]~reg0.ENA
reset => G[6]~reg0.ENA
reset => G[5]~reg0.ENA
reset => G[4]~reg0.ENA
reset => G[3]~reg0.ENA
reset => G[2]~reg0.ENA
reset => G[1]~reg0.ENA
reset => G[0]~reg0.ENA
reset => position_px_sig[2].ENA
reset => position_px_sig[1].ENA
reset => position_px_sig[0].ENA
reset => position_nx_sig[2].ENA
reset => position_nx_sig[1].ENA
reset => position_nx_sig[0].ENA
reset => R_sig[7].ENA
reset => R_sig[6].ENA
reset => R_sig[5].ENA
reset => R_sig[4].ENA
reset => R_sig[3].ENA
reset => R_sig[2].ENA
reset => R_sig[1].ENA
reset => R_sig[0].ENA
reset => R[7]~reg0.ENA
reset => R[6]~reg0.ENA
reset => R[5]~reg0.ENA
reset => R[4]~reg0.ENA
reset => R[3]~reg0.ENA
reset => R[2]~reg0.ENA
reset => R[1]~reg0.ENA
flag_1[0] => flag_past.DATAB
flag_1[0] => LessThan34.IN12
flag_1[0] => p1.IN1
flag_1[0] => Equal67.IN4
flag_1[0] => flag_past.DATAB
flag_1[0] => LessThan38.IN10
flag_1[0] => p1.IN1
flag_1[0] => Decoder1.IN2
flag_1[0] => LessThan0.IN16
flag_1[0] => LessThan1.IN16
flag_1[0] => Decoder2.IN0
flag_1[0] => LessThan2.IN9
flag_1[0] => LessThan3.IN9
flag_1[0] => Decoder3.IN1
flag_1[0] => LessThan4.IN10
flag_1[0] => LessThan5.IN10
flag_1[0] => Decoder4.IN0
flag_1[0] => LessThan6.IN9
flag_1[0] => LessThan7.IN9
flag_1[0] => LessThan8.IN11
flag_1[0] => LessThan9.IN11
flag_1[0] => Decoder5.IN0
flag_1[0] => LessThan10.IN9
flag_1[0] => LessThan11.IN9
flag_1[0] => Decoder6.IN1
flag_1[0] => LessThan12.IN10
flag_1[0] => LessThan13.IN10
flag_1[0] => Decoder7.IN0
flag_1[0] => LessThan14.IN9
flag_1[0] => LessThan15.IN9
flag_1[0] => LessThan16.IN12
flag_1[0] => LessThan17.IN12
flag_1[0] => Decoder8.IN0
flag_1[0] => LessThan18.IN9
flag_1[0] => LessThan19.IN9
flag_1[0] => Decoder9.IN1
flag_1[0] => LessThan20.IN10
flag_1[0] => LessThan21.IN10
flag_1[0] => Decoder10.IN0
flag_1[0] => LessThan22.IN9
flag_1[0] => LessThan23.IN9
flag_1[0] => LessThan24.IN11
flag_1[0] => LessThan25.IN11
flag_1[0] => Decoder11.IN0
flag_1[0] => LessThan26.IN9
flag_1[0] => LessThan27.IN9
flag_1[0] => Decoder12.IN1
flag_1[0] => LessThan28.IN10
flag_1[0] => LessThan29.IN10
flag_1[0] => Decoder13.IN0
flag_1[0] => LessThan30.IN9
flag_1[0] => LessThan31.IN9
flag_1[0] => LessThan32.IN13
flag_1[0] => LessThan33.IN13
flag_1[1] => flag_past.DATAB
flag_1[1] => LessThan34.IN11
flag_1[1] => Equal67.IN3
flag_1[1] => flag_past.DATAB
flag_1[1] => LessThan38.IN9
flag_1[1] => Decoder1.IN1
flag_1[1] => LessThan0.IN15
flag_1[1] => LessThan1.IN15
flag_1[1] => Add7.IN12
flag_1[1] => Decoder3.IN0
flag_1[1] => LessThan4.IN9
flag_1[1] => LessThan5.IN9
flag_1[1] => Add13.IN12
flag_1[1] => LessThan8.IN10
flag_1[1] => LessThan9.IN10
flag_1[1] => Add19.IN12
flag_1[1] => Decoder6.IN0
flag_1[1] => LessThan12.IN9
flag_1[1] => LessThan13.IN9
flag_1[1] => Add25.IN12
flag_1[1] => LessThan16.IN11
flag_1[1] => LessThan17.IN11
flag_1[1] => Add31.IN12
flag_1[1] => Decoder9.IN0
flag_1[1] => LessThan20.IN9
flag_1[1] => LessThan21.IN9
flag_1[1] => Add37.IN12
flag_1[1] => LessThan24.IN10
flag_1[1] => LessThan25.IN10
flag_1[1] => Add43.IN12
flag_1[1] => Decoder12.IN0
flag_1[1] => LessThan28.IN9
flag_1[1] => LessThan29.IN9
flag_1[1] => Add49.IN12
flag_1[1] => LessThan32.IN12
flag_1[1] => LessThan33.IN12
flag_1[2] => flag_past.DATAB
flag_1[2] => LessThan34.IN10
flag_1[2] => Equal67.IN2
flag_1[2] => flag_past.DATAB
flag_1[2] => LessThan38.IN8
flag_1[2] => Decoder1.IN0
flag_1[2] => LessThan0.IN14
flag_1[2] => LessThan1.IN14
flag_1[2] => Add7.IN11
flag_1[2] => Add10.IN10
flag_1[2] => Add13.IN11
flag_1[2] => LessThan8.IN9
flag_1[2] => LessThan9.IN9
flag_1[2] => Add19.IN11
flag_1[2] => Add22.IN10
flag_1[2] => Add25.IN11
flag_1[2] => LessThan16.IN10
flag_1[2] => LessThan17.IN10
flag_1[2] => Add31.IN11
flag_1[2] => Add34.IN10
flag_1[2] => Add37.IN11
flag_1[2] => LessThan24.IN9
flag_1[2] => LessThan25.IN9
flag_1[2] => Add43.IN11
flag_1[2] => Add46.IN10
flag_1[2] => Add49.IN11
flag_1[2] => LessThan32.IN11
flag_1[2] => LessThan33.IN11
flag_1[3] => flag_past.DATAB
flag_1[3] => LessThan34.IN9
flag_1[3] => Equal67.IN1
flag_1[3] => flag_past.DATAB
flag_1[3] => LessThan38.IN7
flag_1[3] => Add2.IN1
flag_1[4] => flag_past.DATAB
flag_1[4] => LessThan34.IN8
flag_1[4] => Equal67.IN0
flag_1[4] => flag_past.DATAB
flag_1[4] => LessThan38.IN6
flag_1[4] => Add2.IN0
clk_2 => R[0]~reg0.CLK
clk_2 => R[1]~reg0.CLK
clk_2 => R[2]~reg0.CLK
clk_2 => R[3]~reg0.CLK
clk_2 => R[4]~reg0.CLK
clk_2 => R[5]~reg0.CLK
clk_2 => R[6]~reg0.CLK
clk_2 => R[7]~reg0.CLK
clk_2 => R_sig[0].CLK
clk_2 => R_sig[1].CLK
clk_2 => R_sig[2].CLK
clk_2 => R_sig[3].CLK
clk_2 => R_sig[4].CLK
clk_2 => R_sig[5].CLK
clk_2 => R_sig[6].CLK
clk_2 => R_sig[7].CLK
clk_2 => position_nx_sig[0].CLK
clk_2 => position_nx_sig[1].CLK
clk_2 => position_nx_sig[2].CLK
clk_2 => position_px_sig[0].CLK
clk_2 => position_px_sig[1].CLK
clk_2 => position_px_sig[2].CLK
clk_2 => G[0]~reg0.CLK
clk_2 => G[1]~reg0.CLK
clk_2 => G[2]~reg0.CLK
clk_2 => G[3]~reg0.CLK
clk_2 => G[4]~reg0.CLK
clk_2 => G[5]~reg0.CLK
clk_2 => G[6]~reg0.CLK
clk_2 => G[7]~reg0.CLK
clk_2 => G_sig[0].CLK
clk_2 => G_sig[1].CLK
clk_2 => G_sig[2].CLK
clk_2 => G_sig[3].CLK
clk_2 => G_sig[4].CLK
clk_2 => G_sig[5].CLK
clk_2 => G_sig[6].CLK
clk_2 => G_sig[7].CLK
clk_2 => C_sig[0].CLK
clk_2 => C_sig[1].CLK
clk_2 => C_sig[2].CLK
clk_2 => C_sig[3].CLK
clk_2 => C_sig[4].CLK
clk_2 => C_sig[5].CLK
clk_2 => C_sig[6].CLK
clk_2 => C_sig[7].CLK
clk_2 => random[0][0].CLK
clk_2 => random[0][1].CLK
clk_2 => random[0][2].CLK
clk_2 => random[1][0].CLK
clk_2 => random[1][1].CLK
clk_2 => random[1][2].CLK
clk_2 => random[2][0].CLK
clk_2 => random[2][1].CLK
clk_2 => random[2][2].CLK
clk_2 => random[3][0].CLK
clk_2 => random[3][1].CLK
clk_2 => random[3][2].CLK
clk_2 => random[4][0].CLK
clk_2 => random[4][1].CLK
clk_2 => random[4][2].CLK
clk_2 => random[5][0].CLK
clk_2 => random[5][1].CLK
clk_2 => random[5][2].CLK
clk_2 => random[6][0].CLK
clk_2 => random[6][1].CLK
clk_2 => random[6][2].CLK
clk_2 => random[7][0].CLK
clk_2 => random[7][1].CLK
clk_2 => random[7][2].CLK
clk_2 => random[8][0].CLK
clk_2 => random[8][1].CLK
clk_2 => random[8][2].CLK
clk_2 => random[9][0].CLK
clk_2 => random[9][1].CLK
clk_2 => random[9][2].CLK
clk_2 => random[10][0].CLK
clk_2 => random[10][1].CLK
clk_2 => random[10][2].CLK
clk_2 => random[11][0].CLK
clk_2 => random[11][1].CLK
clk_2 => random[11][2].CLK
clk_2 => random[12][0].CLK
clk_2 => random[12][1].CLK
clk_2 => random[12][2].CLK
clk_2 => random[13][0].CLK
clk_2 => random[13][1].CLK
clk_2 => random[13][2].CLK
clk_2 => random[14][0].CLK
clk_2 => random[14][1].CLK
clk_2 => random[14][2].CLK
clk_2 => random[15][0].CLK
clk_2 => random[15][1].CLK
clk_2 => random[15][2].CLK
clk_2 => random[16][0].CLK
clk_2 => random[16][1].CLK
clk_2 => random[16][2].CLK
clk_2 => count_r[0].CLK
clk_2 => count_r[1].CLK
clk_2 => count_r[2].CLK
clk_2 => count_r[3].CLK
clk_2 => count_r[4].CLK
clk_2 => score[0]~reg0.CLK
clk_2 => score[1]~reg0.CLK
clk_2 => score[2]~reg0.CLK
clk_2 => score[3]~reg0.CLK
clk_2 => score2[0]~reg0.CLK
clk_2 => score2[1]~reg0.CLK
clk_2 => score2[2]~reg0.CLK
clk_2 => score2[3]~reg0.CLK
clk_2 => game_over_clk32[0]~reg0.CLK
clk_2 => game_over_clk32[1]~reg0.CLK
clk_2 => game_over_clk3[0]~reg0.CLK
clk_2 => game_over_clk3[1]~reg0.CLK
clk_2 => flag_past[0].CLK
clk_2 => flag_past[1].CLK
clk_2 => flag_past[2].CLK
clk_2 => flag_past[3].CLK
clk_2 => flag_past[4].CLK
clk_2 => count_p[0].CLK
clk_2 => count_p[1].CLK
clk_2 => count_p[2].CLK
clk_2 => count_p[3].CLK
clk_2 => score_sig2[0].CLK
clk_2 => score_sig2[1].CLK
clk_2 => score_sig2[2].CLK
clk_2 => score_sig2[3].CLK
clk_2 => score_sig[0].CLK
clk_2 => score_sig[1].CLK
clk_2 => score_sig[2].CLK
clk_2 => score_sig[3].CLK
clk_2 => count_s1[0].CLK
clk_2 => count_s1[1].CLK
clk_2 => count_s1[2].CLK
clk_2 => count_s1[3].CLK
clk_2 => count_s1[4].CLK
clk_2 => game_over_sig2[0].CLK
clk_2 => game_over_sig2[1].CLK
clk_2 => game_over_sig[0].CLK
clk_2 => game_over_sig[1].CLK
clk_2 => count[0].CLK
clk_2 => count[1].CLK
clk_2 => count[2].CLK
clk_2 => count[3].CLK
clk_2 => C[0]~reg0.CLK
clk_2 => C[1]~reg0.CLK
clk_2 => C[2]~reg0.CLK
clk_2 => C[3]~reg0.CLK
clk_2 => C[4]~reg0.CLK
clk_2 => C[5]~reg0.CLK
clk_2 => C[6]~reg0.CLK
clk_2 => C[7]~reg0.CLK
position_past[0] => Equal64.IN3
position_past[1] => Equal64.IN2
position_past[2] => Equal64.IN1
position_now[0] => Equal69.IN3
position_now[0] => Add56.IN6
position_now[0] => Equal68.IN2
position_now[1] => Equal69.IN2
position_now[1] => Add56.IN5
position_now[1] => Equal68.IN1
position_now[2] => Equal69.IN1
position_now[2] => Add56.IN4
position_now[2] => Equal68.IN0
position_past_x[0] => position_px_sig.DATAB
position_past_x[1] => position_px_sig.DATAB
position_past_x[2] => position_px_sig.DATAB
position_now_x[0] => position_nx_sig.DATAB
position_now_x[1] => position_nx_sig.DATAB
position_now_x[2] => position_nx_sig.DATAB
position_past2[0] => ~NO_FANOUT~
position_past2[1] => ~NO_FANOUT~
position_past2[2] => ~NO_FANOUT~
position_now2[0] => Equal74.IN3
position_now2[0] => Add58.IN6
position_now2[0] => Equal78.IN2
position_now2[1] => Equal74.IN2
position_now2[1] => Add58.IN5
position_now2[1] => Equal78.IN1
position_now2[2] => Equal74.IN1
position_now2[2] => Add58.IN4
position_now2[2] => Equal78.IN0
G[0] <= G[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[1] <= G[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[2] <= G[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[3] <= G[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[4] <= G[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[5] <= G[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[6] <= G[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
G[7] <= G[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[0] <= R[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[1] <= R[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[2] <= R[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[3] <= R[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[4] <= R[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[5] <= R[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[6] <= R[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R[7] <= R[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
C[0] <= C[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
C[1] <= C[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
C[2] <= C[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
C[3] <= C[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
C[4] <= C[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
C[5] <= C[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
C[6] <= C[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
C[7] <= C[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[0] <= score[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[1] <= score[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[2] <= score[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[3] <= score[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score2[0] <= score2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score2[1] <= score2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score2[2] <= score2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score2[3] <= score2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
game_over_clk32[0] <= game_over_clk32[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
game_over_clk32[1] <= game_over_clk32[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
game_over_clk3[0] <= game_over_clk3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
game_over_clk3[1] <= game_over_clk3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|flappybird|div_clk1:u4
clk => clk_1_sig.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk_1 <= clk_1_sig.DB_MAX_OUTPUT_PORT_TYPE
clk_12 <= clk_1_sig.DB_MAX_OUTPUT_PORT_TYPE


|flappybird|bird_position:u5
reset => position_n[0].ACLR
reset => position_n[1].ACLR
reset => position_n[2].PRESET
reset => position_n_x[0].ACLR
reset => position_n_x[1].ACLR
reset => position_n_x[2].PRESET
reset => position_p_x[0].ACLR
reset => position_p_x[1].ACLR
reset => position_p_x[2].PRESET
reset => position_p[0].ENA
reset => position_p[2].ENA
reset => position_p[1].ENA
clk_1 => position_p[0].CLK
clk_1 => position_p[1].CLK
clk_1 => position_p[2].CLK
clk_1 => position_n[0].CLK
clk_1 => position_n[1].CLK
clk_1 => position_n[2].CLK
clk_1 => position_n_x[0].CLK
clk_1 => position_n_x[1].CLK
clk_1 => position_n_x[2].CLK
clk_1 => position_p_x[0].CLK
clk_1 => position_p_x[1].CLK
clk_1 => position_p_x[2].CLK
btn_up => position_p[0].OUTPUTSELECT
btn_up => position_p[1].OUTPUTSELECT
btn_up => position_p[2].OUTPUTSELECT
btn_up => position_n[0].OUTPUTSELECT
btn_up => position_n[1].OUTPUTSELECT
btn_up => position_n[2].OUTPUTSELECT
btn_down => position_p[0].OUTPUTSELECT
btn_down => position_p[1].OUTPUTSELECT
btn_down => position_p[2].OUTPUTSELECT
btn_down => position_n[0].OUTPUTSELECT
btn_down => position_n[1].OUTPUTSELECT
btn_down => position_n[2].OUTPUTSELECT
btn_left => position_n_x[0].OUTPUTSELECT
btn_left => position_n_x[1].OUTPUTSELECT
btn_left => position_n_x[2].OUTPUTSELECT
btn_left => position_p_x[0].OUTPUTSELECT
btn_left => position_p_x[1].OUTPUTSELECT
btn_left => position_p_x[2].OUTPUTSELECT
btn_right => position_n_x[0].OUTPUTSELECT
btn_right => position_n_x[1].OUTPUTSELECT
btn_right => position_n_x[2].OUTPUTSELECT
btn_right => position_p_x[0].OUTPUTSELECT
btn_right => position_p_x[1].OUTPUTSELECT
btn_right => position_p_x[2].OUTPUTSELECT
position_past_x[0] <= position_p_x[0].DB_MAX_OUTPUT_PORT_TYPE
position_past_x[1] <= position_p_x[1].DB_MAX_OUTPUT_PORT_TYPE
position_past_x[2] <= position_p_x[2].DB_MAX_OUTPUT_PORT_TYPE
position_now_x[0] <= position_n_x[0].DB_MAX_OUTPUT_PORT_TYPE
position_now_x[1] <= position_n_x[1].DB_MAX_OUTPUT_PORT_TYPE
position_now_x[2] <= position_n_x[2].DB_MAX_OUTPUT_PORT_TYPE
position_past[0] <= position_p[0].DB_MAX_OUTPUT_PORT_TYPE
position_past[1] <= position_p[1].DB_MAX_OUTPUT_PORT_TYPE
position_past[2] <= position_p[2].DB_MAX_OUTPUT_PORT_TYPE
position_now[0] <= position_n[0].DB_MAX_OUTPUT_PORT_TYPE
position_now[1] <= position_n[1].DB_MAX_OUTPUT_PORT_TYPE
position_now[2] <= position_n[2].DB_MAX_OUTPUT_PORT_TYPE


|flappybird|seg7_1:u6
clk_2 => score_view[0]~reg0.CLK
clk_2 => score_view[1]~reg0.CLK
clk_2 => score_view[2]~reg0.CLK
clk_2 => score_view[3]~reg0.CLK
clk_2 => score_view[4]~reg0.CLK
clk_2 => score_view[5]~reg0.CLK
clk_2 => score_view[6]~reg0.CLK
clk_2 => cat[0]~reg0.CLK
clk_2 => cat[1]~reg0.CLK
clk_2 => cat[2]~reg0.CLK
clk_2 => cat[3]~reg0.CLK
clk_2 => cat[4]~reg0.CLK
clk_2 => cat[5]~reg0.CLK
clk_2 => cat[6]~reg0.CLK
clk_2 => cat[7]~reg0.CLK
clk_2 => cat_sig[0].CLK
clk_2 => cat_sig[1].CLK
clk_2 => cat_sig[2].CLK
clk_2 => cat_sig[3].CLK
clk_2 => cat_sig[4].CLK
clk_2 => cat_sig[5].CLK
clk_2 => cat_sig[6].CLK
clk_2 => cat_sig[7].CLK
clk_2 => count[0].CLK
clk_2 => count[1].CLK
clk_2 => count[2].CLK
score[0] => Mux1.IN19
score[0] => Mux2.IN10
score[0] => Mux3.IN19
score[0] => Mux4.IN19
score[0] => Mux5.IN19
score[0] => Mux6.IN19
score[0] => Mux7.IN19
score[1] => Mux0.IN10
score[1] => Mux1.IN18
score[1] => Mux2.IN9
score[1] => Mux3.IN18
score[1] => Mux4.IN18
score[1] => Mux5.IN18
score[1] => Mux6.IN18
score[1] => Mux7.IN18
score[2] => Mux0.IN9
score[2] => Mux1.IN17
score[2] => Mux2.IN8
score[2] => Mux3.IN17
score[2] => Mux4.IN17
score[2] => Mux5.IN17
score[2] => Mux6.IN17
score[2] => Mux7.IN17
score[3] => Mux0.IN8
score[3] => Mux1.IN16
score[3] => Mux3.IN16
score[3] => Mux4.IN16
score[3] => Mux5.IN16
score[3] => Mux6.IN16
score[3] => Mux7.IN16
score2[0] => Mux12.IN19
score2[0] => Mux13.IN10
score2[0] => Mux14.IN19
score2[0] => Mux15.IN19
score2[0] => Mux16.IN19
score2[0] => Mux17.IN19
score2[0] => Mux18.IN19
score2[1] => Mux11.IN10
score2[1] => Mux12.IN18
score2[1] => Mux13.IN9
score2[1] => Mux14.IN18
score2[1] => Mux15.IN18
score2[1] => Mux16.IN18
score2[1] => Mux17.IN18
score2[1] => Mux18.IN18
score2[2] => Mux11.IN9
score2[2] => Mux12.IN17
score2[2] => Mux13.IN8
score2[2] => Mux14.IN17
score2[2] => Mux15.IN17
score2[2] => Mux16.IN17
score2[2] => Mux17.IN17
score2[2] => Mux18.IN17
score2[3] => Mux11.IN8
score2[3] => Mux12.IN16
score2[3] => Mux14.IN16
score2[3] => Mux15.IN16
score2[3] => Mux16.IN16
score2[3] => Mux17.IN16
score2[3] => Mux18.IN16
speed_mode_view[0] => Mux8.IN5
speed_mode_view[0] => Mux9.IN5
speed_mode_view[0] => Mux10.IN5
speed_mode_view[0] => Mux23.IN4
speed_mode_view[1] => Mux8.IN4
speed_mode_view[1] => Mux9.IN4
speed_mode_view[1] => Mux10.IN4
speed_mode_view[1] => Mux25.IN7
score_view[0] <= score_view[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score_view[1] <= score_view[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score_view[2] <= score_view[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score_view[3] <= score_view[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score_view[4] <= score_view[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score_view[5] <= score_view[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score_view[6] <= score_view[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
member_view[0] => Equal9.IN1
member_view[0] => Equal10.IN0
member_view[1] => Equal9.IN0
member_view[1] => Equal10.IN1
cat[0] <= cat[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cat[1] <= cat[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cat[2] <= cat[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cat[3] <= cat[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cat[4] <= cat[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cat[5] <= cat[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cat[6] <= cat[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cat[7] <= cat[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|flappybird|mode_select:u7
sw7 => member.DATAIN
sw7 => member_view[1].DATAIN
sw7 => member_view[0].DATAIN
sw6 => more.DATAIN
sw1 => speed_mode_view[1].DATAIN
sw1 => speed_mode[1].DATAIN
sw0 => speed_mode_view[0].DATAIN
sw0 => speed_mode[0].DATAIN
speed_mode[0] <= sw0.DB_MAX_OUTPUT_PORT_TYPE
speed_mode[1] <= sw1.DB_MAX_OUTPUT_PORT_TYPE
speed_mode_view[0] <= sw0.DB_MAX_OUTPUT_PORT_TYPE
speed_mode_view[1] <= sw1.DB_MAX_OUTPUT_PORT_TYPE
member <= sw7.DB_MAX_OUTPUT_PORT_TYPE
member_view[0] <= sw7.DB_MAX_OUTPUT_PORT_TYPE
member_view[1] <= sw7.DB_MAX_OUTPUT_PORT_TYPE
more <= sw6.DB_MAX_OUTPUT_PORT_TYPE


|flappybird|bird_position2:u8
reset => position_n[0].ACLR
reset => position_n[1].ACLR
reset => position_n[2].PRESET
reset => position_p[0].ENA
reset => position_p[2].ENA
reset => position_p[1].ENA
clk_1 => position_p[0].CLK
clk_1 => position_p[1].CLK
clk_1 => position_p[2].CLK
clk_1 => position_n[0].CLK
clk_1 => position_n[1].CLK
clk_1 => position_n[2].CLK
btn_up2 => position_p[0].OUTPUTSELECT
btn_up2 => position_p[1].OUTPUTSELECT
btn_up2 => position_p[2].OUTPUTSELECT
btn_up2 => position_n[0].OUTPUTSELECT
btn_up2 => position_n[1].OUTPUTSELECT
btn_up2 => position_n[2].OUTPUTSELECT
btn_down2 => position_p[0].OUTPUTSELECT
btn_down2 => position_p[1].OUTPUTSELECT
btn_down2 => position_p[2].OUTPUTSELECT
btn_down2 => position_n[0].OUTPUTSELECT
btn_down2 => position_n[1].OUTPUTSELECT
btn_down2 => position_n[2].OUTPUTSELECT
position_past2[0] <= position_p[0].DB_MAX_OUTPUT_PORT_TYPE
position_past2[1] <= position_p[1].DB_MAX_OUTPUT_PORT_TYPE
position_past2[2] <= position_p[2].DB_MAX_OUTPUT_PORT_TYPE
position_now2[0] <= position_n[0].DB_MAX_OUTPUT_PORT_TYPE
position_now2[1] <= position_n[1].DB_MAX_OUTPUT_PORT_TYPE
position_now2[2] <= position_n[2].DB_MAX_OUTPUT_PORT_TYPE


|flappybird|random:u9
clk => random_sig[0].CLK
clk => random_sig[1].CLK
clk => random_sig[2].CLK
clk => random_sig[3].CLK
clk => random_sig[4].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
random_out[0] <= random_sig[0].DB_MAX_OUTPUT_PORT_TYPE
random_out[1] <= random_sig[1].DB_MAX_OUTPUT_PORT_TYPE
random_out[2] <= random_sig[2].DB_MAX_OUTPUT_PORT_TYPE
random_out[3] <= random_sig[3].DB_MAX_OUTPUT_PORT_TYPE
random_out[4] <= random_sig[4].DB_MAX_OUTPUT_PORT_TYPE


|flappybird|cleanbtn:u10
clk_1 => btn_temp2r.CLK
clk_1 => count2r[0].CLK
clk_1 => count2r[1].CLK
clk_1 => count2r[2].CLK
clk_1 => count2r[3].CLK
clk_1 => count2r[4].CLK
clk_1 => count2r[5].CLK
clk_1 => btn_temp1l.CLK
clk_1 => count1l[0].CLK
clk_1 => count1l[1].CLK
clk_1 => count1l[2].CLK
clk_1 => count1l[3].CLK
clk_1 => count1l[4].CLK
clk_1 => count1l[5].CLK
clk_1 => btn_temp22.CLK
clk_1 => count22[0].CLK
clk_1 => count22[1].CLK
clk_1 => count22[2].CLK
clk_1 => count22[3].CLK
clk_1 => count22[4].CLK
clk_1 => count22[5].CLK
clk_1 => btn_temp12.CLK
clk_1 => count12[0].CLK
clk_1 => count12[1].CLK
clk_1 => count12[2].CLK
clk_1 => count12[3].CLK
clk_1 => count12[4].CLK
clk_1 => count12[5].CLK
clk_1 => btn_temp3.CLK
clk_1 => count3[0].CLK
clk_1 => count3[1].CLK
clk_1 => count3[2].CLK
clk_1 => count3[3].CLK
clk_1 => count3[4].CLK
clk_1 => count3[5].CLK
clk_1 => btn_temp2.CLK
clk_1 => count2[0].CLK
clk_1 => count2[1].CLK
clk_1 => count2[2].CLK
clk_1 => count2[3].CLK
clk_1 => count2[4].CLK
clk_1 => count2[5].CLK
clk_1 => btn_temp1.CLK
clk_1 => count1[0].CLK
clk_1 => count1[1].CLK
clk_1 => count1[2].CLK
clk_1 => count1[3].CLK
clk_1 => count1[4].CLK
clk_1 => count1[5].CLK
btn_up => count1.OUTPUTSELECT
btn_up => count1.OUTPUTSELECT
btn_up => count1.OUTPUTSELECT
btn_up => count1.OUTPUTSELECT
btn_up => count1.OUTPUTSELECT
btn_up => count1.OUTPUTSELECT
btn_up => btn_temp1.OUTPUTSELECT
btn_up_out <= btn_temp1.DB_MAX_OUTPUT_PORT_TYPE
btn_down => count2.OUTPUTSELECT
btn_down => count2.OUTPUTSELECT
btn_down => count2.OUTPUTSELECT
btn_down => count2.OUTPUTSELECT
btn_down => count2.OUTPUTSELECT
btn_down => count2.OUTPUTSELECT
btn_down => btn_temp2.OUTPUTSELECT
btn_down_out <= btn_temp2.DB_MAX_OUTPUT_PORT_TYPE
btn_left => count1l.OUTPUTSELECT
btn_left => count1l.OUTPUTSELECT
btn_left => count1l.OUTPUTSELECT
btn_left => count1l.OUTPUTSELECT
btn_left => count1l.OUTPUTSELECT
btn_left => count1l.OUTPUTSELECT
btn_left => btn_temp1l.OUTPUTSELECT
btn_left_out <= btn_temp1l.DB_MAX_OUTPUT_PORT_TYPE
btn_right => count2r.OUTPUTSELECT
btn_right => count2r.OUTPUTSELECT
btn_right => count2r.OUTPUTSELECT
btn_right => count2r.OUTPUTSELECT
btn_right => count2r.OUTPUTSELECT
btn_right => count2r.OUTPUTSELECT
btn_right => btn_temp2r.OUTPUTSELECT
btn_right_out <= btn_temp2r.DB_MAX_OUTPUT_PORT_TYPE
btn_up2 => count12.OUTPUTSELECT
btn_up2 => count12.OUTPUTSELECT
btn_up2 => count12.OUTPUTSELECT
btn_up2 => count12.OUTPUTSELECT
btn_up2 => count12.OUTPUTSELECT
btn_up2 => count12.OUTPUTSELECT
btn_up2 => btn_temp12.OUTPUTSELECT
btn_up_out2 <= btn_temp12.DB_MAX_OUTPUT_PORT_TYPE
btn_down2 => count22.OUTPUTSELECT
btn_down2 => count22.OUTPUTSELECT
btn_down2 => count22.OUTPUTSELECT
btn_down2 => count22.OUTPUTSELECT
btn_down2 => count22.OUTPUTSELECT
btn_down2 => count22.OUTPUTSELECT
btn_down2 => btn_temp22.OUTPUTSELECT
btn_down_out2 <= btn_temp22.DB_MAX_OUTPUT_PORT_TYPE
reset => count3.OUTPUTSELECT
reset => count3.OUTPUTSELECT
reset => count3.OUTPUTSELECT
reset => count3.OUTPUTSELECT
reset => count3.OUTPUTSELECT
reset => count3.OUTPUTSELECT
reset => btn_temp3.OUTPUTSELECT
reset_out <= btn_temp3.DB_MAX_OUTPUT_PORT_TYPE


